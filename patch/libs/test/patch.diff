diff --git a/build/Jamfile.v2 b/build/Jamfile.v2
index c4fa6e0c..bf9a8ed2 100644
--- a/build/Jamfile.v2
+++ b/build/Jamfile.v2
@@ -6,11 +6,11 @@
 
 import os ;
 
-import ../../predef/check/predef
+import predef
     : check
     : predef-check ;
 
-project boost/test
+project
     : source-location ../src
     : requirements <link>shared:<define>BOOST_TEST_DYN_LINK=1
                    <toolset>borland:<cxxflags>-w-8080
@@ -113,7 +113,3 @@ lib boost_unit_test_framework
 alias minimal ;
 
 alias included ;
-
-boost-install boost_prg_exec_monitor
-              boost_test_exec_monitor
-              boost_unit_test_framework ;
diff --git a/example/Jamfile.v2 b/example/Jamfile.v2
index 806b42e1..4dbd8401 100644
--- a/example/Jamfile.v2
+++ b/example/Jamfile.v2
@@ -11,7 +11,7 @@ import testing ;
 import os ;
 
 # requirements
-import ../../config/checks/config : requires ;
+import config : requires ;
 
 local HAS_UBSAN = "NO_UBSAN" ; # need to defined something
 if [ os.environ UBSAN ]
@@ -22,7 +22,7 @@ if [ os.environ UBSAN ]
 ECHO $(HAS_UBSAN:J) ;
 
 # Project
-project boost/test-examples
+project
     :
     : requirements
       <toolset>clang:<cxxflags>-Wno-c99-extensions <define>$(HAS_UBSAN:J)
@@ -31,12 +31,12 @@ project boost/test-examples
 # Define aliases for the needed libs to get shorter names
 alias prg_exec_monitor
     : # sources
-        /boost//prg_exec_monitor
+        /boost/test//boost_prg_exec_monitor
     ;
 
 alias unit_test_framework
     : # sources
-        /boost//unit_test_framework
+        /boost/test//boost_unit_test_framework
     ;
 
 # make aliases explicit so the libraries will only be built when requested
@@ -60,7 +60,7 @@ alias boost_test_examples
     [ run      unit_test_example_08.cpp unit_test_framework ]
     [ run      unit_test_example_09_1.cpp
                unit_test_example_09_2.cpp unit_test_framework ]
-    [ run-fail unit_test_example_10.cpp unit_test_framework/<link>static ]
+    [ run-fail unit_test_example_10.cpp unit_test_framework/<link>static : : : <source>/boost/lexical_cast//boost_lexical_cast ]
     [ run-fail unit_test_example_11.cpp unit_test_framework/<link>static ]
     [ link     unit_test_example_12.cpp unit_test_framework/<link>static ]
     [ run      unit_test_example_13.cpp ]
diff --git a/test/Jamfile.v2 b/test/Jamfile.v2
index f92dd0ab..a599000b 100644
--- a/test/Jamfile.v2
+++ b/test/Jamfile.v2
@@ -12,13 +12,13 @@ import property-set ;
 import regex ;
 import "class" : new ;
 
-import ../../config/checks/config : requires ;
+import config : requires ;
 
-project boost/test-tests
+project
     : requirements
     ;
 
-import ../../predef/check/predef
+import predef
     : check require
     : predef-check predef-require ;
 
@@ -102,6 +102,7 @@ rule docs-example-as-test ( test-file )
               :
               :
               : $(requirements_documentation) # requirements
+                <source>/boost/rational//boost_rational
             ] ;
 }
 
@@ -141,11 +142,11 @@ test-suite "usage-variants-ts"
 
 test-suite "framework-ts"
 :
-  # [ boost.test-self-test run : framework-ts : result-report-test : : baseline-outputs/result-report-test.pattern baseline-outputs/result_report_test.pattern.default_behaviour ]
-  [ boost.test-self-test run : framework-ts : log-formatter-test : : baseline-outputs/log-formatter-context-test.pattern baseline-outputs/log-formatter-test.pattern baseline-outputs/log-formatter-test.pattern.junit ] # should be ordered alphabetically
+  # [ boost.test-self-test run : framework-ts : result-report-test : : baseline-outputs/result-report-test.pattern baseline-outputs/result_report_test.pattern.default_behaviour : : : : <source>/boost/lexical_cast//boost_lexical_cast ]
+  [ boost.test-self-test run : framework-ts : log-formatter-test : : baseline-outputs/log-formatter-context-test.pattern baseline-outputs/log-formatter-test.pattern baseline-outputs/log-formatter-test.pattern.junit : : : : <source>/boost/lexical_cast//boost_lexical_cast ] # should be ordered alphabetically
   [ boost.test-self-test run : framework-ts : run-by-name-or-label-test ]
   [ boost.test-self-test run : framework-ts : version-uses-module-name : included ]
-  [ boost.test-self-test run : framework-ts : test-macro-global-fixture : : baseline-outputs/global-fixtures-test.pattern ]
+  [ boost.test-self-test run : framework-ts : test-macro-global-fixture : : baseline-outputs/global-fixtures-test.pattern : : : : <source>/boost/lexical_cast//boost_lexical_cast ]
   [ boost.test-self-test run : framework-ts : message-in-datatestcase-test : : baseline-outputs/messages-in-datasets-test.pattern : : : : $(requirements_datasets) ]
   [ boost.test-self-test run : framework-ts : decorators-datatestcase-test : : : : : : $(requirements_datasets) ]
   [ compile-fail framework-ts/master-test-suite-non-copyable-test.cpp ../build//included ]
@@ -166,7 +167,7 @@ test-suite "writing-test-ts"
   [ boost.test-self-test run : writing-test-ts : collection-comparison-test : : : : : : $(requirements_boost_test_full_support)  [ requires cxx11_unified_initialization_syntax ] ] # required by the test content
   [ boost.test-self-test run : writing-test-ts : dont_print_log_value-test : : : : : : $(requirements_datasets) ]
   [ boost.test-self-test run : writing-test-ts : fp-comparisons-test : : : : : : $(requirements_boost_test_full_support) ]
-  [ boost.test-self-test run : writing-test-ts : fp-multiprecision-comparison-test : : : : : : $(requirements_boost_test_full_support) [ requires cxx14_decltype_auto cxx14_generic_lambdas cxx14_return_type_deduction cxx14_variable_templates cxx14_constexpr ] ]
+  [ boost.test-self-test run : writing-test-ts : fp-multiprecision-comparison-test : : : : : : $(requirements_boost_test_full_support) [ requires cxx14_decltype_auto cxx14_generic_lambdas cxx14_return_type_deduction cxx14_variable_templates cxx14_constexpr ] <source>/boost/multiprecision//boost_multiprecision ]
   [ boost.test-self-test run : writing-test-ts : fp-no-comparison-for-incomplete-types-test ]
   [ boost.test-self-test run : writing-test-ts : fp-relational-operator ]
   [ boost.test-self-test run : writing-test-ts : output_test_stream-test ]
@@ -336,19 +337,19 @@ rule boost.test-smoke-ts-logger ( test-name-prefix : logger ? : log_or_report ?
    return $(to-return) ;
 }
 
-exe smoke-ts-included : smoke-ts/basic-smoke-test.cpp
+alias smoke-ts-included : smoke-ts/basic-smoke-test.cpp
                       : $(requirements_datasets) ;
 
-exe smoke-ts-included-2 : smoke-ts/basic-smoke-test2.cpp ;
+alias smoke-ts-included-2 : smoke-ts/basic-smoke-test2.cpp ;
 
-exe smoke-ts-included-3 : smoke-ts/basic-smoke-test3.cpp ;
+alias smoke-ts-included-3 : smoke-ts/basic-smoke-test3.cpp ;
 
 # for template test case filtering from the command line
-exe smoke-ts-included-4 : smoke-ts/basic-smoke-test4.cpp ;
+alias smoke-ts-included-4 : smoke-ts/basic-smoke-test4.cpp ;
 
-exe check-streams-on-exit : framework-ts/check-streams-on-exit.cpp ;
+alias check-streams-on-exit : framework-ts/check-streams-on-exit.cpp ;
 
-exe dataset-master-test-suite-accessible-test : test-organization-ts/dataset-master-test-suite-accessible-test.cpp
+alias dataset-master-test-suite-accessible-test : test-organization-ts/dataset-master-test-suite-accessible-test.cpp
                                               : $(requirements_datasets) ;
 
 alias "smoke-ts"
@@ -434,12 +435,12 @@ alias "smoke-ts"
 [ run smoke-ts-included-4 : \"--run_test=some_suite/test<my_struct<float_ float>>,test<my_struct<char_ char>>\" \"--run_test=test<my_struct<int_ int>>\" : : : cla-template-test-case-sanity-15 ]
 ;
 
-exe custom-command-line-binary-1 : ../doc/examples/runtime-configuration_1.run-fail.cpp ;
-exe custom-command-line-binary-2 : ../doc/examples/runtime-configuration_2.run-fail.cpp
+alias custom-command-line-binary-1 : ../doc/examples/runtime-configuration_1.run-fail.cpp ;
+alias custom-command-line-binary-2 : ../doc/examples/runtime-configuration_2.run-fail.cpp
                                  : $(requirements_boost_test_full_support) ;
-exe custom-command-line-binary-3 : ../doc/examples/runtime-configuration_3.run-fail.cpp
+alias custom-command-line-binary-3 : ../doc/examples/runtime-configuration_3.run-fail.cpp
                                  : $(requirements_boost_test_full_support) ;
-exe custom-command-line-binary-4 : ../doc/examples/runtime-configuration_4.run-fail.cpp
+alias custom-command-line-binary-4 : ../doc/examples/runtime-configuration_4.run-fail.cpp
                                  : $(requirements_datasets) [ requires cxx11_trailing_result_types cxx11_auto_declarations ] $(l_gcc_c11_rvalue_full_support) ;
 
 alias "custom-command-line-ts"
