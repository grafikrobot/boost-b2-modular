diff --git a/build/Jamfile.v2 b/build/Jamfile.v2
index 3a77b5e..0ceb3f9 100644
--- a/build/Jamfile.v2
+++ b/build/Jamfile.v2
@@ -6,12 +6,10 @@
 # accompanying file LICENSE_1_0.txt or copy at
 # http://www.boost.org/LICENSE_1_0.txt)
 
-project /boost/type_erasure
+project
   : source-location ../src
   : requirements <link>shared:<define>BOOST_TYPE_ERASURE_DYN_LINK
   : usage-requirements <link>shared:<define>BOOST_TYPE_ERASURE_DYN_LINK
 ;
 
-lib boost_type_erasure : dynamic_binding.cpp /boost//thread ;
-
-boost-install boost_type_erasure ;
+lib boost_type_erasure : dynamic_binding.cpp /boost/thread//boost_thread ;
diff --git a/example/Jamfile.jam b/example/Jamfile.jam
index d96922f..9d554c2 100644
--- a/example/Jamfile.jam
+++ b/example/Jamfile.jam
@@ -21,4 +21,4 @@ compile associated.cpp ;
 
 run print_sequence.cpp ;
 run printf.cpp ;
-run multifunction.cpp ;
+run multifunction.cpp /boost/variant//boost_variant /boost/phoenix//boost_phoenix ;
diff --git a/test/Jamfile.jam b/test/Jamfile.jam
index ae030ab..52374cb 100644
--- a/test/Jamfile.jam
+++ b/test/Jamfile.jam
@@ -7,42 +7,42 @@
 # http://www.boost.org/LICENSE_1_0.txt)
 
 import testing ;
-import ../../../libs/config/checks/config ;
+import checks/config ;
 
-run test_binding.cpp /boost//unit_test_framework ;
-run test_increment.cpp /boost//unit_test_framework ;
-run test_add.cpp /boost//unit_test_framework ;
-run test_add_assign.cpp /boost//unit_test_framework ;
-run test_callable.cpp /boost//unit_test_framework ;
-run test_reference.cpp /boost//unit_test_framework ;
-run test_construct.cpp /boost//unit_test_framework ;
-run test_relaxed.cpp /boost//unit_test_framework ;
-run test_assign.cpp /boost//unit_test_framework : : :
+run test_binding.cpp /boost/test//unit_test_framework ;
+run test_increment.cpp /boost/test//unit_test_framework ;
+run test_add.cpp /boost/test//unit_test_framework ;
+run test_add_assign.cpp /boost/test//unit_test_framework ;
+run test_callable.cpp /boost/test//unit_test_framework ;
+run test_reference.cpp /boost/test//unit_test_framework ;
+run test_construct.cpp /boost/test//unit_test_framework ;
+run test_relaxed.cpp /boost/test//unit_test_framework ;
+run test_assign.cpp /boost/test//unit_test_framework : : :
   <toolset>gcc,<target-os>windows:<cxxflags>-Wa,-mbig-obj
   <toolset>gcc,<target-os>windows,<variant>debug:<build>no
   ;
-run test_construct_ref.cpp /boost//unit_test_framework ;
-run test_construct_cref.cpp /boost//unit_test_framework ;
-run test_any_cast.cpp /boost//unit_test_framework ;
-run test_binding_of.cpp /boost//unit_test_framework ;
-run test_typeid_of.cpp /boost//unit_test_framework ;
-run test_nested.cpp /boost//unit_test_framework ;
-run test_less.cpp /boost//unit_test_framework ;
-run test_equal.cpp /boost//unit_test_framework ;
-run test_negate.cpp /boost//unit_test_framework ;
-run test_dereference.cpp /boost//unit_test_framework ;
-run test_subscript.cpp /boost//unit_test_framework ;
-run test_forward_iterator.cpp /boost//unit_test_framework ;
-run test_tuple.cpp /boost//unit_test_framework ;
-run test_stream.cpp /boost//unit_test_framework ;
-run test_deduced.cpp /boost//unit_test_framework ;
-run test_same_type.cpp /boost//unit_test_framework ;
-run test_member.cpp /boost//unit_test_framework ;
-run test_null.cpp /boost//unit_test_framework ;
-run test_free.cpp /boost//unit_test_framework ;
-run test_is_empty.cpp /boost//unit_test_framework ;
-run test_dynamic_any_cast.cpp /boost//unit_test_framework /boost//type_erasure ;
-run test_limits.cpp /boost//unit_test_framework
+run test_construct_ref.cpp /boost/test//unit_test_framework ;
+run test_construct_cref.cpp /boost/test//unit_test_framework ;
+run test_any_cast.cpp /boost/test//unit_test_framework ;
+run test_binding_of.cpp /boost/test//unit_test_framework ;
+run test_typeid_of.cpp /boost/test//unit_test_framework ;
+run test_nested.cpp /boost/test//unit_test_framework ;
+run test_less.cpp /boost/test//unit_test_framework ;
+run test_equal.cpp /boost/test//unit_test_framework ;
+run test_negate.cpp /boost/test//unit_test_framework ;
+run test_dereference.cpp /boost/test//unit_test_framework ;
+run test_subscript.cpp /boost/test//unit_test_framework ;
+run test_forward_iterator.cpp /boost/test//unit_test_framework ;
+run test_tuple.cpp /boost/test//unit_test_framework ;
+run test_stream.cpp /boost/test//unit_test_framework ;
+run test_deduced.cpp /boost/test//unit_test_framework ;
+run test_same_type.cpp /boost/test//unit_test_framework ;
+run test_member.cpp /boost/test//unit_test_framework ;
+run test_null.cpp /boost/test//unit_test_framework ;
+run test_free.cpp /boost/test//unit_test_framework ;
+run test_is_empty.cpp /boost/test//unit_test_framework ;
+run test_dynamic_any_cast.cpp /boost/test//unit_test_framework /boost/type_erasure//boost_type_erasure ;
+run test_limits.cpp /boost/test//unit_test_framework
   : requirements
     [ config.requires cxx11_rvalue_references
                       cxx11_template_aliases
