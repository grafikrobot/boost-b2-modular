diff --git a/build/Jamfile.v2 b/build/Jamfile.v2
index 34d7f24..6a5e30f 100644
--- a/build/Jamfile.v2
+++ b/build/Jamfile.v2
@@ -7,12 +7,10 @@
 # accompanying file LICENSE_1_0.txt or copy at
 # http://www.boost.org/LICENSE_1_0.txt)
 
-project /boost/random
+project
   : source-location ../src
   : requirements <link>shared:<define>BOOST_RANDOM_DYN_LINK
   : usage-requirements <link>shared:<define>BOOST_RANDOM_DYN_LINK
 ;
 
 lib boost_random : [ glob *.cpp ] ;
-
-boost-install boost_random ;
diff --git a/example/Jamfile.v2 b/example/Jamfile.v2
index c598e78..803b217 100644
--- a/example/Jamfile.v2
+++ b/example/Jamfile.v2
@@ -9,5 +9,5 @@
 
 run die.cpp ;
 run weighted_die.cpp ;
-run password.cpp /boost//random ;
-run intersections.cpp /boost//random ;
+run password.cpp /boost/random//boost_random ;
+run intersections.cpp /boost/math//boost_math /boost/random//boost_random ;
diff --git a/extra/Jamfile.v2 b/extra/Jamfile.v2
index a0ee2af..e86e461 100644
--- a/extra/Jamfile.v2
+++ b/extra/Jamfile.v2
@@ -7,4 +7,4 @@
 # accompanying file LICENSE_1_0.txt or copy at
 # http://www.boost.org/LICENSE_1_0.txt)
 
-run test_haertel.cpp ;
+run test_haertel.cpp /boost/format//boost_format /boost/test//boost_test ;
diff --git a/performance/Jamfile.v2 b/performance/Jamfile.v2
index 4315385..1ad664c 100644
--- a/performance/Jamfile.v2
+++ b/performance/Jamfile.v2
@@ -10,8 +10,8 @@ else
 }
 
 exe random_speed.exe : random_speed.cpp mt19937ar : release ;
-exe generate_table.exe : generate_table.cpp /boost//regex : <link>static ;
-exe nondet_random_speed.exe : nondet_random_speed.cpp /boost//random : release <link>static  ;
+exe generate_table.exe : generate_table.cpp /boost/regex//boost_regex : <link>static ;
+exe nondet_random_speed.exe : nondet_random_speed.cpp /boost/random//boost_random : release <link>static  ;
 
 install random_speed : random_speed.exe : <install-type>EXE <location>. ;
 install nondet_random_speed : nondet_random_speed.exe : <install-type>EXE <location>. ;
diff --git a/test/Jamfile.v2 b/test/Jamfile.v2
index e189cae..776672f 100644
--- a/test/Jamfile.v2
+++ b/test/Jamfile.v2
@@ -5,62 +5,65 @@
 
 # Boost Random Library test Jamfile
 
+require-b2 5.0.1 ;
+import-search /boost/config/checks ;
+import config : requires ;
+
 # bring in rules for testing
 import testing ;
-import ../../config/checks/config : requires ;
 
-project /boost/random/test : requirements <toolset>msvc:<define>_SCL_SECURE_NO_WARNINGS ;
+project : requirements <toolset>msvc:<define>_SCL_SECURE_NO_WARNINGS ;
 
-run test_const_mod.cpp /boost//unit_test_framework ;
-run test_generate_canonical.cpp /boost//unit_test_framework ;
-run test_random_number_generator.cpp /boost//unit_test_framework ;
+run test_const_mod.cpp /boost/test//unit_test_framework ;
+run test_generate_canonical.cpp /boost/test//unit_test_framework ;
+run test_random_number_generator.cpp /boost/test//unit_test_framework ;
 run ../example/random_demo.cpp ;
-run test_random_device.cpp /boost//random : : : <link>static : test_random_device ;
-run test_random_device.cpp /boost//random : : : <link>shared : test_random_device_dll ;
+run test_random_device.cpp /boost/random//boost_random /boost/test//boost_test : : : <link>static : test_random_device ;
+run test_random_device.cpp /boost/random//boost_random /boost/test//boost_test : : : <link>shared : test_random_device_dll ;
 
-run test_minstd_rand0.cpp /boost//unit_test_framework ;
-run test_minstd_rand.cpp /boost//unit_test_framework ;
-run test_rand48.cpp /boost//unit_test_framework ;
-run test_mt11213b.cpp /boost//unit_test_framework ;
-run test_mt19937.cpp /boost//unit_test_framework ;
-run test_mt19937_64.cpp /boost//unit_test_framework ;
-run test_mixmax.cpp /boost//unit_test_framework ;
-run test_ecuyer1988.cpp /boost//unit_test_framework ;
-run test_hellekalek1995.cpp /boost//unit_test_framework ;
-run test_linear_feedback_shift.cpp /boost//unit_test_framework ;
-run test_taus88.cpp /boost//unit_test_framework ;
-run test_kreutzer1986.cpp /boost//unit_test_framework ;
-run test_ranlux3.cpp /boost//unit_test_framework ;
-run test_ranlux4.cpp /boost//unit_test_framework ;
-run test_ranlux3_01.cpp /boost//unit_test_framework ;
-run test_ranlux4_01.cpp /boost//unit_test_framework ;
-run test_ranlux64_4.cpp /boost//unit_test_framework ;
-run test_ranlux64_3.cpp /boost//unit_test_framework ;
-run test_ranlux64_3_01.cpp /boost//unit_test_framework ;
-run test_ranlux64_4_01.cpp /boost//unit_test_framework ;
-run test_ranlux24_base.cpp /boost//unit_test_framework ;
-run test_ranlux24.cpp /boost//unit_test_framework ;
-run test_ranlux48_base.cpp /boost//unit_test_framework ;
-run test_ranlux48.cpp /boost//unit_test_framework ;
-run test_knuth_b.cpp /boost//unit_test_framework ;
-run test_independent_bits31.cpp /boost//unit_test_framework ;
-run test_independent_bits32.cpp /boost//unit_test_framework ;
-run test_lagged_fibonacci.cpp /boost//unit_test_framework ;
-run test_lagged_fibonacci607.cpp /boost//unit_test_framework ;
-run test_lagged_fibonacci1279.cpp /boost//unit_test_framework ;
-run test_lagged_fibonacci2281.cpp /boost//unit_test_framework ;
-run test_lagged_fibonacci3217.cpp /boost//unit_test_framework ;
-run test_lagged_fibonacci4423.cpp /boost//unit_test_framework ;
-run test_lagged_fibonacci9689.cpp /boost//unit_test_framework ;
-run test_lagged_fibonacci19937.cpp /boost//unit_test_framework ;
-run test_lagged_fibonacci23209.cpp /boost//unit_test_framework ;
-run test_lagged_fibonacci44497.cpp /boost//unit_test_framework ;
-run test_zero_seed.cpp /boost//unit_test_framework ;
-run test_splitmix64.cpp /boost//unit_test_framework ;
+run test_minstd_rand0.cpp /boost/test//unit_test_framework ;
+run test_minstd_rand.cpp /boost/test//unit_test_framework ;
+run test_rand48.cpp /boost/test//unit_test_framework ;
+run test_mt11213b.cpp /boost/test//unit_test_framework ;
+run test_mt19937.cpp /boost/test//unit_test_framework ;
+run test_mt19937_64.cpp /boost/test//unit_test_framework ;
+run test_mixmax.cpp /boost/test//unit_test_framework ;
+run test_ecuyer1988.cpp /boost/test//unit_test_framework ;
+run test_hellekalek1995.cpp /boost/test//unit_test_framework ;
+run test_linear_feedback_shift.cpp /boost/test//unit_test_framework ;
+run test_taus88.cpp /boost/test//unit_test_framework ;
+run test_kreutzer1986.cpp /boost/test//unit_test_framework ;
+run test_ranlux3.cpp /boost/test//unit_test_framework ;
+run test_ranlux4.cpp /boost/test//unit_test_framework ;
+run test_ranlux3_01.cpp /boost/test//unit_test_framework ;
+run test_ranlux4_01.cpp /boost/test//unit_test_framework ;
+run test_ranlux64_4.cpp /boost/test//unit_test_framework ;
+run test_ranlux64_3.cpp /boost/test//unit_test_framework ;
+run test_ranlux64_3_01.cpp /boost/test//unit_test_framework ;
+run test_ranlux64_4_01.cpp /boost/test//unit_test_framework ;
+run test_ranlux24_base.cpp /boost/test//unit_test_framework ;
+run test_ranlux24.cpp /boost/test//unit_test_framework ;
+run test_ranlux48_base.cpp /boost/test//unit_test_framework ;
+run test_ranlux48.cpp /boost/test//unit_test_framework ;
+run test_knuth_b.cpp /boost/test//unit_test_framework ;
+run test_independent_bits31.cpp /boost/test//unit_test_framework ;
+run test_independent_bits32.cpp /boost/test//unit_test_framework ;
+run test_lagged_fibonacci.cpp /boost/test//unit_test_framework ;
+run test_lagged_fibonacci607.cpp /boost/test//unit_test_framework ;
+run test_lagged_fibonacci1279.cpp /boost/test//unit_test_framework ;
+run test_lagged_fibonacci2281.cpp /boost/test//unit_test_framework ;
+run test_lagged_fibonacci3217.cpp /boost/test//unit_test_framework ;
+run test_lagged_fibonacci4423.cpp /boost/test//unit_test_framework ;
+run test_lagged_fibonacci9689.cpp /boost/test//unit_test_framework ;
+run test_lagged_fibonacci19937.cpp /boost/test//unit_test_framework ;
+run test_lagged_fibonacci23209.cpp /boost/test//unit_test_framework ;
+run test_lagged_fibonacci44497.cpp /boost/test//unit_test_framework ;
+run test_zero_seed.cpp /boost/test//unit_test_framework ;
+run test_splitmix64.cpp /boost/test//unit_test_framework ;
 
-run niederreiter_base2_validate.cpp /boost//unit_test_framework ;
-run sobol_validate.cpp /boost//unit_test_framework ;
-run faure_validate.cpp /boost//unit_test_framework ;
+run niederreiter_base2_validate.cpp /boost/test//unit_test_framework ;
+run sobol_validate.cpp /boost/test//unit_test_framework ;
+run faure_validate.cpp /boost/test//unit_test_framework ;
 
 # Disable by default.  These don't add much and the larger
 # ones can overflow the stack.
@@ -70,66 +73,73 @@ explicit test_lagged_fibonacci1279 test_lagged_fibonacci2281
     test_lagged_fibonacci19937 test_lagged_fibonacci23209
     test_lagged_fibonacci44497 ;
 
-run test_seed_seq.cpp /boost//unit_test_framework ;
+alias math_test :
+    /boost/assign//boost_assign
+    /boost/exception//boost_exception
+    /boost/lexical_cast//boost_lexical_cast
+    /boost/math//boost_math
+    ;
+
+run test_seed_seq.cpp /boost/assign//boost_assign /boost/test//unit_test_framework ;
 
-run test_binomial.cpp ;
-run test_binomial_distribution.cpp /boost//unit_test_framework ;
-run test_poisson.cpp ;
-run test_poisson_distribution.cpp /boost//unit_test_framework ;
-run test_discrete.cpp ;
-run test_discrete_distribution.cpp /boost//unit_test_framework ;
-run test_gamma.cpp ;
-run test_gamma_distribution.cpp /boost//unit_test_framework ;
-run test_weibull.cpp ;
-run test_weibull_distribution.cpp /boost//unit_test_framework ;
-run test_extreme_value.cpp ;
-run test_extreme_value_distribution.cpp /boost//unit_test_framework ;
-run test_negative_binomial.cpp ;
-run test_negative_binomial_distribution.cpp /boost//unit_test_framework ;
-run test_chi_squared.cpp ;
-run test_chi_squared_distribution.cpp /boost//unit_test_framework ;
-run test_fisher_f.cpp ;
-run test_fisher_f_distribution.cpp /boost//unit_test_framework ;
-run test_student_t.cpp ;
-run test_student_t_distribution.cpp /boost//unit_test_framework ;
-run test_normal.cpp ;
-run test_normal_distribution.cpp /boost//unit_test_framework ;
-run test_piecewise_constant.cpp ;
-run test_piecewise_constant_distribution.cpp /boost//unit_test_framework ;
-run test_piecewise_linear.cpp ;
-run test_piecewise_linear_distribution.cpp /boost//unit_test_framework ;
-run test_exponential.cpp ;
-run test_exponential_distribution.cpp /boost//unit_test_framework ;
-run test_bernoulli.cpp ;
-run test_bernoulli_distribution.cpp /boost//unit_test_framework ;
-run test_cauchy.cpp ;
-run test_cauchy_distribution.cpp /boost//unit_test_framework ;
-run test_geometric.cpp ;
-run test_geometric_distribution.cpp /boost//unit_test_framework ;
-run test_lognormal.cpp ;
-run test_lognormal_distribution.cpp /boost//unit_test_framework ;
-run test_triangle.cpp ;
-run test_triangle_distribution.cpp /boost//unit_test_framework ;
-run test_uniform_int.cpp ;
-run test_uniform_int_distribution.cpp /boost//unit_test_framework ;
-run test_uniform_real.cpp ;
-run test_uniform_real_distribution.cpp /boost//unit_test_framework ;
-run test_uniform_on_sphere.cpp ;
-run test_uniform_on_sphere_distribution.cpp /boost//unit_test_framework ;
-run test_uniform_smallint.cpp ;
-run test_uniform_smallint_distribution.cpp /boost//unit_test_framework ;
-run test_old_uniform_real.cpp ;
-run test_old_uniform_real_distribution.cpp /boost//unit_test_framework ;
-run test_old_uniform_int.cpp ;
-run test_old_uniform_int_distribution.cpp /boost//unit_test_framework ;
-run test_beta.cpp ;
-run test_beta_distribution.cpp /boost//unit_test_framework ;
-run test_laplace.cpp ;
-run test_laplace_distribution.cpp /boost//unit_test_framework ;
-run test_non_central_chi_squared.cpp ;
-run test_non_central_chi_squared_distribution.cpp /boost//unit_test_framework ;
-run test_hyperexponential.cpp ;
-run test_hyperexponential_distribution.cpp /boost//unit_test_framework ;
+run test_binomial.cpp math_test ;
+run test_binomial_distribution.cpp /boost/test//unit_test_framework ;
+run test_poisson.cpp math_test ;
+run test_poisson_distribution.cpp /boost/test//unit_test_framework ;
+run test_discrete.cpp math_test ;
+run test_discrete_distribution.cpp /boost/assign//boost_assign /boost/test//unit_test_framework ;
+run test_gamma.cpp math_test ;
+run test_gamma_distribution.cpp /boost/test//unit_test_framework ;
+run test_weibull.cpp math_test ;
+run test_weibull_distribution.cpp /boost/test//unit_test_framework ;
+run test_extreme_value.cpp math_test ;
+run test_extreme_value_distribution.cpp /boost/test//unit_test_framework ;
+run test_negative_binomial.cpp math_test ;
+run test_negative_binomial_distribution.cpp /boost/test//unit_test_framework ;
+run test_chi_squared.cpp math_test ;
+run test_chi_squared_distribution.cpp /boost/test//unit_test_framework ;
+run test_fisher_f.cpp math_test ;
+run test_fisher_f_distribution.cpp /boost/test//unit_test_framework ;
+run test_student_t.cpp math_test ;
+run test_student_t_distribution.cpp /boost/test//unit_test_framework ;
+run test_normal.cpp math_test ;
+run test_normal_distribution.cpp /boost/test//unit_test_framework ;
+run test_piecewise_constant.cpp math_test ;
+run test_piecewise_constant_distribution.cpp /boost/assign//boost_assign /boost/test//unit_test_framework ;
+run test_piecewise_linear.cpp math_test ;
+run test_piecewise_linear_distribution.cpp /boost/assign//boost_assign /boost/test//unit_test_framework ;
+run test_exponential.cpp math_test ;
+run test_exponential_distribution.cpp /boost/test//unit_test_framework ;
+run test_bernoulli.cpp math_test ;
+run test_bernoulli_distribution.cpp /boost/test//unit_test_framework ;
+run test_cauchy.cpp math_test ;
+run test_cauchy_distribution.cpp /boost/test//unit_test_framework ;
+run test_geometric.cpp math_test ;
+run test_geometric_distribution.cpp /boost/test//unit_test_framework ;
+run test_lognormal.cpp math_test ;
+run test_lognormal_distribution.cpp /boost/test//unit_test_framework ;
+run test_triangle.cpp math_test ;
+run test_triangle_distribution.cpp /boost/test//unit_test_framework ;
+run test_uniform_int.cpp math_test ;
+run test_uniform_int_distribution.cpp math_test /boost/test//unit_test_framework ;
+run test_uniform_real.cpp math_test ;
+run test_uniform_real_distribution.cpp /boost/test//unit_test_framework ;
+run test_uniform_on_sphere.cpp math_test ;
+run test_uniform_on_sphere_distribution.cpp math_test /boost/test//unit_test_framework ;
+run test_uniform_smallint.cpp math_test ;
+run test_uniform_smallint_distribution.cpp /boost/test//unit_test_framework ;
+run test_old_uniform_real.cpp math_test ;
+run test_old_uniform_real_distribution.cpp /boost/test//unit_test_framework ;
+run test_old_uniform_int.cpp math_test ;
+run test_old_uniform_int_distribution.cpp math_test /boost/test//unit_test_framework ;
+run test_beta.cpp math_test ;
+run test_beta_distribution.cpp /boost/test//unit_test_framework ;
+run test_laplace.cpp math_test ;
+run test_laplace_distribution.cpp /boost/test//unit_test_framework ;
+run test_non_central_chi_squared.cpp math_test ;
+run test_non_central_chi_squared_distribution.cpp /boost/test//unit_test_framework ;
+run test_hyperexponential.cpp math_test ;
+run test_hyperexponential_distribution.cpp math_test /boost/test//unit_test_framework ;
 
 # run nondet_random_speed.cpp ;
 # run random_device.cpp ;
@@ -145,6 +155,6 @@ explicit statistic_tests ;
 #
 # Multiprecision tests:
 #
-run multiprecision_int_test.cpp /boost//unit_test_framework : : : [ requires cxx14_decltype_auto cxx14_generic_lambdas cxx14_return_type_deduction cxx14_variable_templates cxx14_constexpr ] ;
+run multiprecision_int_test.cpp /boost/test//unit_test_framework /boost/multiprecision//boost_multiprecision : : : [ requires cxx14_decltype_auto cxx14_generic_lambdas cxx14_return_type_deduction cxx14_variable_templates cxx14_constexpr ] ;
 # This one runs too slow in debug mode, we really need inline expansions turned on amongst other things:
-run multiprecision_float_test.cpp /boost//unit_test_framework : : : [ requires cxx14_decltype_auto cxx14_generic_lambdas cxx14_return_type_deduction cxx14_variable_templates cxx14_constexpr ] release ;
+run multiprecision_float_test.cpp /boost/test//unit_test_framework /boost/multiprecision//boost_multiprecision : : : [ requires cxx14_decltype_auto cxx14_generic_lambdas cxx14_return_type_deduction cxx14_variable_templates cxx14_constexpr ] release ;
