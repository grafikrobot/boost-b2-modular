diff --git a/test/Jamfile.v2 b/test/Jamfile.v2
index 96e440b..1bfd7c6 100644
--- a/test/Jamfile.v2
+++ b/test/Jamfile.v2
@@ -22,9 +22,9 @@ test-suite iterator
     [ run zip_iterator_test2_fusion_vector.cpp ]
     [ run zip_iterator_test2_fusion_list.cpp ]
 #    [ run zip_iterator_test2_fusion_deque.cpp ] // See bug report for fusion https://svn.boost.org/trac/boost/ticket/11572
-    [ run zip_iterator_test_fusion.cpp ]
-    [ run zip_iterator_test_std_tuple.cpp ]
-    [ run zip_iterator_test_std_pair.cpp ]
+    [ run zip_iterator_test_fusion.cpp : : : <source>/boost/assign//boost_assign ]
+    [ run zip_iterator_test_std_tuple.cpp : : : <source>/boost/assign//boost_assign ]
+    [ run zip_iterator_test_std_pair.cpp : : : <source>/boost/assign//boost_assign ]
 
     # These tests should work for just about everything.
     [ compile is_lvalue_iterator.cpp ]
@@ -59,10 +59,10 @@ test-suite iterator
     [ compile-fail minimum_category_compile_fail.cpp ]
 
     [ run next_prior_test.cpp ]
-    [ run advance_test.cpp ]
-    [ run distance_test.cpp ]
-    [ compile adl_test.cpp ]
-    [ compile range_distance_compat_test.cpp ]
+    [ run advance_test.cpp : : : <source>/boost/container//boost_container ]
+    [ run distance_test.cpp : : : <source>/boost/container//boost_container ]
+    [ compile adl_test.cpp : <source>/boost/array//boost_array ]
+    [ compile range_distance_compat_test.cpp : <source>/boost/range//boost_range ]
 
     [ run shared_iterator_test.cpp ]
 ;
