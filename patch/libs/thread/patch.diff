diff --git a/build/Jamfile.v2 b/build/Jamfile.v2
index 1a88d010..4655d2bb 100644
--- a/build/Jamfile.v2
+++ b/build/Jamfile.v2
@@ -40,7 +40,7 @@ import threadapi-feature ;
 
 exe has_atomic_flag_lockfree : ../build/has_atomic_flag_lockfree_test.cpp ;
 
-project boost/thread
+project
     : source-location ../src
     : requirements <threading>multi
       #<link>static:<define>BOOST_THREAD_STATIC_LINK=1
@@ -156,8 +156,15 @@ rule tag ( name : type ? : property-set )
     }
 
     # forward to the boost tagging rule
-    return  [ indirect.call $(BOOST_JAMROOT_MODULE)%$(BOOST_JAMROOT_MODULE).tag
-                $(result) : $(type) : $(property-set) ] ;
+    if $(BOOST_JAMROOT_MODULE)
+    {
+        return  [ indirect.call $(BOOST_JAMROOT_MODULE)%$(BOOST_JAMROOT_MODULE).tag
+                    $(result) : $(type) : $(property-set) ] ;
+    }
+    else
+    {
+        return $(result) ;
+    }
 }
 
 rule win32_pthread_paths ( properties * )
@@ -316,4 +323,4 @@ lib boost_thread
       <conditional>@usage-requirements
     ;
 
-boost-install boost_thread ;
\ No newline at end of file
+# boost-install boost_thread ;
\ No newline at end of file
diff --git a/example/Jamfile.v2 b/example/Jamfile.v2
index bfc8a59b..fbdf760c 100644
--- a/example/Jamfile.v2
+++ b/example/Jamfile.v2
@@ -4,7 +4,7 @@
 #  Distributed under the Boost Software License, Version 1.0. (See accompanying 
 #  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 
-project boost/thread/example 
+project 
     : requirements <library>../build//boost_thread <threading>multi
     ;
        
diff --git a/test/Jamfile.v2 b/test/Jamfile.v2
index 33a83c7c..f6021914 100644
--- a/test/Jamfile.v2
+++ b/test/Jamfile.v2
@@ -268,10 +268,9 @@ rule generate_self_contained_header_tests
 
     if ! [ os.environ BOOST_THREAD_TEST_WITHOUT_SELF_CONTAINED_HEADER_TESTS ]
     {
-        local headers_path = [ path.make $(BOOST_ROOT)/libs/thread/include/boost/thread ] ;
-        for file in [ path.glob-tree $(headers_path) : *.hpp : detail pthread win32 ]
+        for file in [ glob-tree-ex ../include/boost/thread : *.hpp : detail pthread win32 ]
         {
-            local rel_file = [ path.relative-to $(headers_path) $(file) ] ;
+            local rel_file = [ path.relative-to ../include/boost/thread $(file) ] ;
             # Note: The test name starts with '~' in order to group these tests in the test report table, preferably at the end.
             #       All '/' are replaced with '-' because apparently test scripts have a problem with test names containing slashes.
             local test_name = [ regex.replace ~hdr/$(rel_file) "/" "-" ] ;
