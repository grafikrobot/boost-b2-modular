diff --git a/build/Jamfile.v2 b/build/Jamfile.v2
index 59c9093..d64d0cb 100644
--- a/build/Jamfile.v2
+++ b/build/Jamfile.v2
@@ -8,9 +8,11 @@
 # Software License, Version 1.0. (See accompanying file 
 # LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 
-import ../../config/checks/config : requires ;
+require-b2 5.0.1 ;
+import-search /boost/config/checks ;
+import config : requires ;
 
-project boost/wave
+project
     : requirements
       [ requires
         cxx11_constexpr
@@ -45,8 +47,8 @@ SOURCES =
 lib boost_wave
     :
     $(SOURCES)
-    ../../filesystem/build//boost_filesystem
-    ../../thread/build//boost_thread
+    /boost/filesystem//boost_filesystem
+    /boost/thread//boost_thread
     ;
 
 for local source in $(SOURCES)
@@ -69,5 +71,3 @@ for local source in $(SOURCES)
 
     obj $(source) : $(source).cpp : $(requirements) ;
 }
-
-boost-install boost_wave ;
diff --git a/samples/Jamfile.v2 b/samples/Jamfile.v2
index e754cfd..aa98d4a 100644
--- a/samples/Jamfile.v2
+++ b/samples/Jamfile.v2
@@ -3,6 +3,8 @@
 # (See accompanying file LICENSE_1_0.txt
 # or copy at http://www.boost.org/LICENSE_1_0.txt)
 
+require-b2 5.0.1 ;
+import-search /boost/config/checks ;
 import config : requires ;
 
 project 
diff --git a/samples/check_macro_naming/check_macro_naming.cpp b/samples/check_macro_naming/check_macro_naming.cpp
index 02e475c..c8a37f9 100644
--- a/samples/check_macro_naming/check_macro_naming.cpp
+++ b/samples/check_macro_naming/check_macro_naming.cpp
@@ -11,7 +11,7 @@
 =============================================================================*/
 
 #include "check_macro_naming.hpp"
-#include "libs/filesystem/include/boost/filesystem/file_status.hpp"
+#include "boost/filesystem/file_status.hpp"
 
 ///////////////////////////////////////////////////////////////////////////////
 //  Utilities from the rest of Boost
diff --git a/samples/list_includes/build/Jamfile.v2 b/samples/list_includes/build/Jamfile.v2
index ed72b8d..15d5b80 100644
--- a/samples/list_includes/build/Jamfile.v2
+++ b/samples/list_includes/build/Jamfile.v2
@@ -18,14 +18,18 @@ SOURCES =
         ../instantiate_lexertl_lexer 
     ;
 
+project
+    : requirements
+        <source>/boost/wave//boost_wave
+        <source>/boost/program_options//boost_program_options/<link>static
+        <source>/boost/filesystem//boost_filesystem
+        <source>/boost/system//boost_system
+        <source>/boost/thread//boost_thread
+    ;
+
 exe list_includes
     :
         $(SOURCES)
-        /boost/wave//boost_wave
-        /boost/program_options//boost_program_options/<link>static
-        /boost/filesystem//boost_filesystem     
-        /boost/system//boost_system     
-        /boost/thread//boost_thread
     ;
 
 for local source in $(SOURCES)
diff --git a/samples/token_statistics/build/Jamfile.v2 b/samples/token_statistics/build/Jamfile.v2
index 14361a3..c7d61fc 100644
--- a/samples/token_statistics/build/Jamfile.v2
+++ b/samples/token_statistics/build/Jamfile.v2
@@ -16,14 +16,19 @@ SOURCES =
         ../instantiate_has_include_grammar
     ;
 
+project
+    : requirements
+        <source>/boost/wave//boost_wave
+        <source>/boost/program_options//boost_program_options/<link>static
+        <source>/boost/filesystem//boost_filesystem
+        <source>/boost/system//boost_system
+        <source>/boost/thread//boost_thread
+        <source>/boost/xpressive//boost_xpressive
+    ;
+
 exe token_statistics
     :
         $(SOURCES)
-        /boost/wave//boost_wave
-        /boost/program_options//boost_program_options/<link>static
-        /boost/filesystem//boost_filesystem     
-        /boost/system//boost_system     
-        /boost/thread//boost_thread
     ;
 
 for local source in $(SOURCES)
diff --git a/samples/waveidl/build/Jamfile.v2 b/samples/waveidl/build/Jamfile.v2
index 6a17bba..3a1d2cf 100644
--- a/samples/waveidl/build/Jamfile.v2
+++ b/samples/waveidl/build/Jamfile.v2
@@ -17,16 +17,20 @@ SOURCES =
         ../instantiate_re2c_lexer
         ../instantiate_re2c_lexer_str
         ../idllexer/idl_re
-	;
-	
+    ;
+
+project
+    : requirements
+        <source>/boost/wave//boost_wave
+        <source>/boost/program_options//boost_program_options/<link>static
+        <source>/boost/system//boost_system
+        <source>/boost/thread//boost_thread
+        <source>/boost/filesystem//boost_filesystem
+    ;
+
 exe waveidl
     :
         $(SOURCES)
-        /boost/wave//boost_wave
-        /boost/program_options//boost_program_options/<link>static
-        /boost/system//boost_system
-        /boost/thread//boost_thread
-        /boost/filesystem//boost_filesystem
     ;
 
 for local source in $(SOURCES)
diff --git a/test/build/Jamfile.v2 b/test/build/Jamfile.v2
index 683ab11..80ecab0 100644
--- a/test/build/Jamfile.v2
+++ b/test/build/Jamfile.v2
@@ -8,6 +8,8 @@
 # Software License, Version 1.0. (See accompanying file 
 # LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 
+require-b2 5.0.1 ;
+import-search /boost/config/checks ;
 import config : requires ;
 
 #
@@ -22,7 +24,13 @@ SOURCES_DYNAMIC = testwave_dll testwave_app_dll
 SOURCES = $(SOURCE_STATIC) $(SOURCES_DYNAMIC)
     ;
     
-path-constant TESTWAVE_DIR : $(BOOST_ROOT)/libs/wave/test/testwave/testfiles 
+path-constant TESTWAVE_DIR : ../testwave/testfiles 
+    ;
+
+path-constant WAVE_INCLUDE_DIR : ../../include
+    ;
+
+path-constant SAMPLES_DIR : ../../samples
     ;
 
 #
@@ -32,7 +40,7 @@ TESTWAVE_ARGUMENTS =
         -d4                              # use -d4 for verbose results 
         --hooks=1                        # test hooks as well
         -S$(TESTWAVE_DIR) 
-        -S$(BOOST_ROOT) -I$(BOOST_ROOT)
+        -S$(WAVE_INCLUDE_DIR) -I$(WAVE_INCLUDE_DIR)
     ;
 
 #
@@ -41,7 +49,7 @@ TESTWAVE_ARGUMENTS =
 TESTWAVE_FILES = test.cfg
     ;
 
-project wave/test
+project
     : requirements
       [ requires
         cxx11_constexpr
@@ -51,6 +59,7 @@ project wave/test
         cxx11_hdr_mutex
         cxx11_hdr_regex
       ]
+      <include>$(SAMPLES_DIR)
     ;
 
 for local source in $(SOURCES)
@@ -58,6 +67,10 @@ for local source in $(SOURCES)
     local requirements ;
     requirements += <toolset-msvc:version>7.1:<rtti>off ; # workaround for compiler bug
     requirements += <toolset-msvc:version>7.1_stlport4:<rtti>off ; 
+    requirements +=
+        <source>/boost/any//boost_any
+        <source>/boost/program_options//boost_program_options
+        ;
     obj $(source) : ../testwave/$(source).cpp : $(requirements) ;
 }
 
@@ -133,6 +146,7 @@ test-suite wave
                 /boost/filesystem//boost_filesystem
                 /boost/thread//boost_thread
                 /boost/system//boost_system
+                /boost/xpressive//boost_xpressive
             :
             # arguments
             :
@@ -211,6 +225,7 @@ test-suite wave
                 /boost/filesystem//boost_filesystem
                 /boost/thread//boost_thread
                 /boost/system//boost_system
+                /boost/xpressive//boost_xpressive
             :
             # arguments
             :
diff --git a/test/testlexers/test_lexertl_lexer.cpp b/test/testlexers/test_lexertl_lexer.cpp
index da8ccf8..fb9b9b1 100644
--- a/test/testlexers/test_lexertl_lexer.cpp
+++ b/test/testlexers/test_lexertl_lexer.cpp
@@ -24,7 +24,7 @@
 
 //  include the lexertl lexer related stuff
 #include <boost/wave/cpplexer/cpp_lex_token.hpp>                      // token type
-#include <libs/wave/samples/list_includes/lexertl/lexertl_lexer.hpp>  // lexer type
+#include <list_includes/lexertl/lexertl_lexer.hpp>  // lexer type
 
 typedef boost::wave::cpplexer::lex_token<> token_type;
 typedef boost::wave::cpplexer::lexertl::lex_iterator<token_type> lexer_type;
diff --git a/test/testlexers/test_slex_lexer.cpp b/test/testlexers/test_slex_lexer.cpp
index 46331ba..7cfe124 100644
--- a/test/testlexers/test_slex_lexer.cpp
+++ b/test/testlexers/test_slex_lexer.cpp
@@ -27,8 +27,8 @@
 
 ///////////////////////////////////////////////////////////////////////////////
 //  include the Slex lexer related stuff
-#include <libs/wave/samples/cpp_tokens/slex_token.hpp>            // token type
-#include <libs/wave/samples/cpp_tokens/slex/cpp_slex_lexer.hpp>   // lexer type
+#include <cpp_tokens/slex_token.hpp>            // token type
+#include <cpp_tokens/slex/cpp_slex_lexer.hpp>   // lexer type
 
 typedef boost::wave::cpplexer::slex_token<> token_type;
 typedef boost::wave::cpplexer::slex::slex_iterator<token_type> lexer_type;
diff --git a/test/testlexers/test_xlex_lexer.cpp b/test/testlexers/test_xlex_lexer.cpp
index 99f29a1..13fb9b5 100644
--- a/test/testlexers/test_xlex_lexer.cpp
+++ b/test/testlexers/test_xlex_lexer.cpp
@@ -26,8 +26,8 @@
 ///////////////////////////////////////////////////////////////////////////////
 //  include the Xpressive lexer related stuff
 #include <boost/wave/cpplexer/cpp_lex_token.hpp>                  // token type
-#include <libs/wave/samples/token_statistics/xlex/xlex_lexer.hpp> // lexer type
-#include <libs/wave/samples/token_statistics/xlex_iterator.hpp>   // iterator
+#include <token_statistics/xlex/xlex_lexer.hpp> // lexer type
+#include <token_statistics/xlex_iterator.hpp>   // iterator
 
 typedef boost::wave::cpplexer::lex_token<> token_type;
 typedef boost::wave::cpplexer::xlex::xlex_iterator<token_type> lexer_type;
diff --git a/tool/build/Jamfile.v2 b/tool/build/Jamfile.v2
index dff6030..a5b11ea 100644
--- a/tool/build/Jamfile.v2
+++ b/tool/build/Jamfile.v2
@@ -34,13 +34,14 @@ project
 exe wave
     :
     ../cpp.cpp 
-    /boost//wave
-    /boost//program_options
-    /boost//filesystem
-    /boost//serialization
-    /boost//system
-    /boost//thread
+    /boost/wave//boost_wave
+    /boost/program_options//boost_program_options
+    /boost/filesystem//boost_filesystem
+    /boost/serialization//boost_serialization
+    /boost/system//boost_system
+    /boost/thread//boost_thread
     /boost/timer//boost_timer/<link>static
+    /boost/foreach//boost_foreach
     :
     <threading>multi
 #   <debug-symbols>on
@@ -49,8 +50,8 @@ exe wave
     release
     ;
     
-local bindir = [ option.get bindir : ../../../dist/bin ] ;
-local libdir = [ option.get libdir : ../../../dist/lib ] ;
+local bindir = [ option.get bindir : ../dist/bin ] ;
+local libdir = [ option.get libdir : ../dist/lib ] ;
 
 install dist-bin
     :
