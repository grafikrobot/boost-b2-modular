diff --git a/Jamfile b/Jamfile
deleted file mode 100644
index ee18a21f2..000000000
--- a/Jamfile
+++ /dev/null
@@ -1,11 +0,0 @@
-#  Boost.GIL Library Jamfile
-#
-#  Copyright (c) 2018 James E. King III
-#
-#  Use, modification, and distribution are subject to the
-#  Boost Software License, Version 1.0. (See accompanying file
-#  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
-
-# please order by name to ease maintenance
-build-project example ;
-build-project test ;
diff --git a/example/Jamfile b/example/Jamfile
index ba4a6e81c..d5087a69d 100644
--- a/example/Jamfile
+++ b/example/Jamfile
@@ -6,7 +6,7 @@
 # Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
 # http://www.boost.org/LICENSE_1_0.txt)
 
-import ../../config/checks/config : requires ;
+import config : requires ;
 import regex ;
 
 using libjpeg : : : : true ; # work around bug on master
diff --git a/test/Jamfile b/test/Jamfile
index 5c674a587..bc6e95627 100644
--- a/test/Jamfile
+++ b/test/Jamfile
@@ -9,7 +9,7 @@
 # Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
 # http://www.boost.org/LICENSE_1_0.txt)
 
-import ../../config/checks/config : requires ;
+import config : requires ;
 import os ;
 import path ;
 import regex ;
@@ -83,21 +83,14 @@ rule generate_self_contained_headers ( headers_subpath * : exclude_subpaths * )
     # NOTE: All '/' in test names are replaced with '-' because apparently
     #       test scripts have a problem with test names containing slashes.
 
-    local top_headers_path = [ path.make $(BOOST_ROOT)/libs/gil/include/boost/gil ] ;
-    local headers_path = $(top_headers_path) ;
-    if $(headers_subpath)
-    {
-        headers_path = $(top_headers_path)/$(headers_subpath) ;
-    }
-
-    for local file in [ path.glob-tree $(headers_path) : *.hpp : $(exclude_subpaths) ]
+    for local file in [ glob-tree-ex ../include/boost/gil : *.hpp : $(exclude_subpaths) ]
     {
         local target_no = [ sequence.length $(targets) ] ;
-        local rel_file = [ path.relative-to $(top_headers_path) $(file) ] ;
+        local rel_file = [ path.relative-to ../include/boost/gil $(file) ] ;
         local target_name = [ regex.replace h/$(target_no)/$(rel_file) "/" "-" ] ;
         local target_name = [ regex.replace $(target_name) "\.hpp" "" ] ;
         targets += [
-            compile $(BOOST_ROOT)/libs/gil/test/header/main.cpp
+            compile header/main.cpp
             : <define>"BOOST_GIL_TEST_HEADER=$(rel_file)" <dependency>$(file)
             : $(target_name)
         ] ;
diff --git a/test/core/algorithm/Jamfile b/test/core/algorithm/Jamfile
index 99436eca7..aa51fa435 100644
--- a/test/core/algorithm/Jamfile
+++ b/test/core/algorithm/Jamfile
@@ -10,6 +10,6 @@
 import testing ;
 
 run for_each_pixel.cpp ;
-run std_fill.cpp ;
+run std_fill.cpp : : : <library>/boost/array//boost_array ;
 run std_uninitialized_fill.cpp ;
 run extend_boundary.cpp ;
diff --git a/test/legacy/Jamfile b/test/legacy/Jamfile
index 048ab8c49..c987dd631 100644
--- a/test/legacy/Jamfile
+++ b/test/legacy/Jamfile
@@ -17,7 +17,7 @@
 
 import testing ;
 
-run image.cpp sample_image.cpp error_if.cpp : : gil_reference_checksums.txt ;
+run image.cpp sample_image.cpp error_if.cpp : : gil_reference_checksums.txt : <library>/boost/crc//boost_crc ;
 run channel.cpp error_if.cpp ;
 run pixel.cpp error_if.cpp ;
 run pixel_iterator.cpp error_if.cpp ;
