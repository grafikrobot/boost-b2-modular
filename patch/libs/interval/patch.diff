diff --git a/examples/Jamfile.v2 b/examples/Jamfile.v2
index b2890b1..aa59dd2 100644
--- a/examples/Jamfile.v2
+++ b/examples/Jamfile.v2
@@ -12,9 +12,9 @@ import testing ;
     : [ compile filter.cpp         : <build>yes <toolset>msvc-10.0:<build>no ]  # ambiguous sin()
       [ compile findroot_demo.cpp  ]
       [ compile horner.cpp         ]
-      [ compile io.cpp             ]
+      [ compile io.cpp : <source>/boost/io//boost_io ]
       [ compile newton-raphson.cpp ]
-      [ compile rational.cpp       ]
+      [ compile rational.cpp : <source>/boost/rational//boost_rational ]
     # [ compile transc.cpp         ] requires gmp3, mpfr 
     ;
 }
diff --git a/test/Jamfile.v2 b/test/Jamfile.v2
index 37b9c23..fccae16 100644
--- a/test/Jamfile.v2
+++ b/test/Jamfile.v2
@@ -7,8 +7,6 @@
 # copy at http://www.boost.org/LICENSE_1_0.txt)
 
 project
-  :
-  source-location $(BOOST_ROOT)
   :
   requirements
     # Enable dynamic rounding on Tru64 (Alpha CPU).
@@ -24,25 +22,25 @@ import testing ;
 
 {
   test-suite numeric/interval :
-    [ compile libs/numeric/interval/test/integer.cpp ]
+    [ compile integer.cpp ]
 
-    [ run libs/numeric/interval/test/add.cpp      ]
-    [ run libs/numeric/interval/test/det.cpp      ]
-    [ run libs/numeric/interval/test/fmod.cpp     ]
-    [ run libs/numeric/interval/test/msvc_x64_flags.cpp : : : <build>no <toolset>msvc:<build>yes ]
-    [ run libs/numeric/interval/test/mul.cpp      ]
-    [ run libs/numeric/interval/test/overflow.cpp ]
-    [ run libs/numeric/interval/test/pi.cpp       ]
-    [ run libs/numeric/interval/test/pow.cpp      ]
+    [ run add.cpp      ]
+    [ run det.cpp      ]
+    [ run fmod.cpp     ]
+    [ run msvc_x64_flags.cpp : : : <build>no <toolset>msvc:<build>yes ]
+    [ run mul.cpp      ]
+    [ run overflow.cpp ]
+    [ run pi.cpp       ]
+    [ run pow.cpp      ]
 
-    [ run libs/numeric/interval/test/cmp.cpp ]
-    [ run libs/numeric/interval/test/cmp_exn.cpp ]
-    [ run libs/numeric/interval/test/cmp_exp.cpp ]
-    [ run libs/numeric/interval/test/cmp_lex.cpp ]
-    [ run libs/numeric/interval/test/cmp_set.cpp ]
+    [ run cmp.cpp ]
+    [ run cmp_exn.cpp : : : <source>/boost/logic//boost_logic ]
+    [ run cmp_exp.cpp ]
+    [ run cmp_lex.cpp ]
+    [ run cmp_set.cpp ]
  # https://github.com/boostorg/interval/issues/15
- #  [ run libs/numeric/interval/test/cmp_tribool.cpp ]
-    [ run libs/numeric/interval/test/test_float.cpp
+ #  [ run cmp_tribool.cpp ]
+    [ run test_float.cpp
       : : : <build>yes <toolset>msvc-10.0:<build>no ]
             # https://github.com/boostorg/interval/issues/17
   ;
